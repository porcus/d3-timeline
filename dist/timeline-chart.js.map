{"version":3,"sources":["timeline-chart.js"],"names":["TimelineChart","element","data","opts","self","classList","add","options","extendOptions","allElements","reduce","agg","e","concat","minDt","d3","min","getPointMinDt","maxDt","max","getPointMaxDt","dateDelta","getTime","zoomOutPct","Date","elementWidth","width","clientWidth","elementHeight","height","clientHeight","margin","top","right","bottom","left","groupWidth","hideGroupLabels","groupHeight","length","xTimeScale","time","scale","domain","range","xAxis","svg","axis","orient","tickSize","zoom","behavior","x","on","zoomed","_svg","select","append","attr","call","clipPathRect","interactionRect","enableLiveTimer","now","groupSection","selectAll","enter","d","i","setInterval","handleWidthChange","newWidth","groupLabels","text","label","wrap","lineSection","groupIntervalItems","filter","_","type","TYPE","INTERVAL","intervalBarHeight","intervalBarMargin","intervals","withCustom","Math","intervalMinWidth","to","from","onClick","intervalTexts","groupDotItems","POINT","dots","at","tip","html","show","hide","console","error","updateNowMarker","timerTickInterval","anchorPosition","each","words","split","reverse","word","line","lineNumber","lineHeight","y","dx","parseFloat","dy","lines","tspan","pop","push","join","node","getComputedTextLength","nowX","defaultClass","customClass","onVizChangeFn","event","translate","positionData","getTextPositionData","upToPosition","textWidth","xPosition","percent","textTruncateThreshold","labelText","substr","floor","textSizeInPx","ext","defaultOptions","undefined","Object","keys","map","k","p","fn","Symbol","module","exports"],"mappings":"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","file":"timeline-chart.js","sourcesContent":["class TimelineChart {\n    constructor(element, data, opts) {\n        let self = this;\n\n        element.classList.add('timeline-chart');\n\n        let options = this.extendOptions(opts);\n\n        let allElements = data.reduce((agg, e) => agg.concat(e.data), []);\n\n        let minDt = d3.min(allElements, this.getPointMinDt);\n        let maxDt = d3.max(allElements, this.getPointMaxDt);\n        // zoom out just slightly, to allow for a little space on either end of the timeline\n        let dateDelta = maxDt.getTime() - minDt.getTime();\n        let zoomOutPct = .02;\n        minDt = new Date(minDt.getTime() - (dateDelta * zoomOutPct));\n        maxDt = new Date(maxDt.getTime() + (dateDelta * zoomOutPct));\n\n        let elementWidth = options.width || element.clientWidth || 600;\n        let elementHeight = options.height || element.clientHeight || 200;\n\n        let margin = {\n            top: 20,\n            right: 0,\n            bottom: 0,  // set to about 20 for a bottom-aligned axis\n            left: 0\n        };\n\n        let width = elementWidth - margin.left - margin.right;\n        let height = elementHeight - margin.top - margin.bottom;\n\n        // Width of the group label area\n        let groupWidth = options.hideGroupLabels ? 0 : 400;\n        // Height of each section containing a horizontal series.  By default, fit each series into the available vertical space.\n        let groupHeight = height / data.length;\n\n        // If the groupHeight option is set, then use its value for the height of each series, and set the total height accordingly.\n        if (!!options.groupHeight)\n        {\n            groupHeight = options.groupHeight;\n            height = groupHeight * data.length;\n        }\n\n        let xTimeScale = d3.time.scale()\n            .domain([minDt, maxDt])\n            .range([groupWidth, width]);\n\n        // X axis ticks\n        let xAxis = d3.svg.axis()\n            .scale(xTimeScale)\n            .orient('top') // set to 'bottom' for a bottom-aligned axis and to 'top' for a top-aligned axis\n            .tickSize(height); // set to height for a bottom-aligned axis and to -height for a top-aligned axis\n\n        let zoom = d3.behavior.zoom()\n            .x(xTimeScale)\n            .on('zoom', zoomed);\n\n        let _svg = d3.select(element).append('svg')\n            .attr('width', width + margin.left + margin.right)\n            .attr('height', height + margin.top + margin.bottom);\n        let svg = _svg\n            .append('g')\n            .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n            .call(zoom);\n\n        let clipPathRect = svg.append('defs')\n            .append('clipPath')\n            .attr('id', 'chart-content')\n            .append('rect')\n            .attr('x', groupWidth)\n            .attr('y', 0)\n            .attr('height', height)\n            .attr('width', width - groupWidth)\n\n        // Invisible rect covering chart bounds, ensuring that all interactions intended for the chart will be raised as events on SVG elements\n        let interactionRect = svg.append('rect')\n            .attr('class', 'chart-bounds')\n            .attr('x', groupWidth)\n            .attr('y', 0)\n            .attr('height', height)\n            .attr('width', width - groupWidth)\n\n        // Axis with labels and ticks\n        svg.append('g')\n            .attr('class', 'x axis')\n            .attr('transform', 'translate(0,' + height + ')')\n            .call(xAxis);\n\n        if (options.enableLiveTimer) {\n            self.now = svg.append('line')\n                .attr('clip-path', 'url(#chart-content)')\n                .attr('class', 'vertical-marker now')\n                .attr(\"y1\", 0)\n                .attr(\"y2\", height);\n        }\n\n        // horizontal lines between groups\n        let groupSection = svg.selectAll('.group-section')\n            .data(data)\n            .enter()\n            .append('line')\n            .attr('class', 'group-section')\n            .attr('x1', 0)\n            .attr('x2', width)\n            .attr('y1', (d, i) => {\n                return groupHeight * (i + 1);\n            })\n            .attr('y2', (d, i) => {\n                return groupHeight * (i + 1);\n            });\n\n        // Monitor for change in size of containing element\n        setInterval(handleWidthChange, 1000);\n\n        function handleWidthChange() {\n            var newWidth = element.clientWidth - margin.left - margin.right - 2;\n\n            if (newWidth != width)\n            {\n                //console.log('xTimeScale', xTimeScale);\n                //console.log(\"old width: \", width);\n                //console.log(\"new width: \", newWidth);\n                width = newWidth;\n\n                _svg.attr(\"width\", width) ;\n                groupSection.attr('x2', width);\n                clipPathRect.attr(\"width\", width);\n                interactionRect.attr(\"width\", width - groupWidth);\n                xTimeScale.range([xTimeScale.range()[0], width]);\n                zoomed();\n            }\n        }\n\n        // group label text (for each series)\n        if (!options.hideGroupLabels) {\n            let groupLabels = svg.selectAll('.group-label')\n                .data(data)\n                .enter()\n                .append('text')\n                .attr('class', 'group-label')\n                .attr('x', '0.5em') //0)\n                .attr('y', (d, i) => {\n                    return (groupHeight * i) + (groupHeight / 2) ; //+ 5.5;\n                })\n                .attr('dx', '0.5em')\n                .attr('dy', '0')  //'0.5em')\n                .text(d => d.label)\n                .call(wrap, groupWidth);\n\n            let lineSection = svg.append('line').attr('x1', groupWidth).attr('x2', groupWidth).attr('y1', 0).attr('y2', height).attr('stroke', 'orange');\n        }\n\n        let groupIntervalItems = svg.selectAll('.group-interval-item')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('clip-path', 'url(#chart-content)')\n            .attr('class', 'item')\n            .attr('transform', (d, i) => `translate(0, ${groupHeight * i})`)\n            .selectAll('.dot')\n            .data(d => d.data.filter(_ => _.type === TimelineChart.TYPE.INTERVAL))\n            .enter();\n\n        let intervalBarHeight = 0.8 * groupHeight;\n        let intervalBarMargin = (groupHeight - intervalBarHeight) / 2;\n        let intervals = groupIntervalItems\n            .append('rect')\n            .attr('class', withCustom('interval'))\n            .attr('width', (d) => Math.max(options.intervalMinWidth, xTimeScale(d.to) - xTimeScale(d.from)))\n            .attr('height', intervalBarHeight)\n            .attr('y', intervalBarMargin)\n            .attr('x', (d) => xTimeScale(d.from))\n            .on('click', (d) => { !d.onClick || d.onClick(d); });\n\n        // interval text\n        let intervalTexts = groupIntervalItems\n            .append('text')\n            .text(d => d.label || '')  //  (typeof(d.label) === 'function' ? d.label(d) : d.label) || '')\n            .attr('fill', 'white')\n            .attr('class', withCustom('interval-text'))\n            .attr('y', (groupHeight / 2) + 5)\n            .attr('x', (d) => xTimeScale(d.from));\n\n        let groupDotItems = svg.selectAll('.group-dot-item')\n            .data(data)\n            .enter()\n            .append('g')\n            .attr('clip-path', 'url(#chart-content)')\n            .attr('class', 'item')\n            .attr('transform', (d, i) => `translate(0, ${groupHeight * i})`)\n            .selectAll('.dot')\n            .data(d => {\n                return d.data.filter(_ => _.type === TimelineChart.TYPE.POINT);\n            })\n            .enter();\n\n        let dots = groupDotItems\n            .append('circle')\n            .attr('class', withCustom('dot'))\n            .attr('cx', d => xTimeScale(d.at))\n            .attr('cy', groupHeight / 2)\n            .attr('r', 7)\n            .on('click', (d) => { !d.onClick || d.onClick(d); });\n\n        if (options.tip) {\n            if (d3.tip) {\n                let tip = d3.tip().attr('class', 'd3-tip').html(options.tip);\n                svg.call(tip);\n                dots.on('mouseover', tip.show).on('mouseout', tip.hide);\n                intervals.on('mouseover', tip.show).on('mouseout', tip.hide);\n            } else {\n                console.error('Please make sure you have d3.tip included as dependency (https://github.com/Caged/d3-tip)');\n            }\n        }\n\n        zoomed();\n\n        if (options.enableLiveTimer) {\n            setInterval(updateNowMarker, options.timerTickInterval);\n        }\n\n\n        function wrap(text, width, anchorPosition) \n        {\n            text.each(function() {\n                var text = d3.select(this),\n                words = text.text().split(/\\s+/).reverse(),\n                word,\n                line = [],\n                lineNumber = 0,\n                lineHeight = 1.1, // ems\n                y = text.attr(\"y\"),\n                dx = parseFloat(text.attr(\"dx\")),\n                dy = parseFloat(text.attr(\"dy\")),\n                lines = [];\n                var tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dx\", dx + \"em\").attr(\"dy\", dy + \"em\");\n                while (word = words.pop()) \n                {\n                    line.push(word);\n                    tspan.text(line.join(\" \"));\n                    if (tspan.node().getComputedTextLength() > width) \n                    {\n                        line.pop();\n                        tspan.text(line.join(\" \"));\n                        line = [word];\n                        lines.push(line);\n                        tspan = text.append(\"tspan\")\n                            .attr(\"x\", 0)\n                            .attr(\"y\", y)\n                            .attr(\"dx\", dx + \"em\")\n                            .attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\")\n                            .text(word);\n                    }\n                }\n            });\n        }\n      \n        function updateNowMarker() {\n            let nowX = xTimeScale(new Date());\n\n            self.now.attr('x1', nowX).attr('x2', nowX);\n        }\n\n        function withCustom(defaultClass) {\n            return d => d.customClass ? [d.customClass, defaultClass].join(' ') : defaultClass\n        }\n\n        function zoomed() {\n            if (self.onVizChangeFn && d3.event) {\n                self.onVizChangeFn.call(self, {\n                    scale: d3.event.scale,\n                    translate: d3.event.translate,\n                    domain: xTimeScale.domain()\n                });\n            }\n\n            if (options.enableLiveTimer) {\n                updateNowMarker();\n            }\n\n            svg.select('.x.axis').call(xAxis);\n\n            svg.selectAll('circle.dot').attr('cx', d => xTimeScale(d.at));\n            svg.selectAll('rect.interval').attr('x', d => xTimeScale(d.from)).attr('width', d => Math.max(options.intervalMinWidth, xTimeScale(d.to) - xTimeScale(d.from)));\n\n            svg.selectAll('.interval-text').attr('x', function(d) {\n                    let positionData = getTextPositionData.call(this, d);\n                    if ((positionData.upToPosition - groupWidth - 10) < positionData.textWidth) {\n                        return positionData.upToPosition;\n                    } else if (positionData.xPosition < groupWidth && positionData.upToPosition > groupWidth) {\n                        return groupWidth;\n                    }\n                    return positionData.xPosition;\n                }).attr('text-anchor', function(d) {\n                    let positionData = getTextPositionData.call(this, d);\n                    if ((positionData.upToPosition - groupWidth - 10) < positionData.textWidth) {\n                        return 'end';\n                    }\n                    return 'start';\n                })\n                .attr('dx', function(d) {\n                    let positionData = getTextPositionData.call(this, d);\n                    if ((positionData.upToPosition - groupWidth - 10) < positionData.textWidth) {\n                        return '-0.5em';\n                    }\n                    return '0.5em';\n                }).text(function(d) {\n                    var positionData = getTextPositionData.call(this, d);\n                    var percent = (positionData.width - options.textTruncateThreshold) / positionData.textWidth;\n                    // (typeof(d.label) === 'function' ? d.label(d) : d.label) || ''\n                    var labelText = d.label || ''; //typeof(d.label)===\"string\" ? d.label : typeof(d.label)===\"function\" ? d.label(d) : '';\n                    if (percent < 1) {\n                        if (positionData.width > options.textTruncateThreshold) {\n                            //return d.label.substr(0, Math.floor(d.label.length * percent)) + '...';\n                            return labelText.substr(0, Math.floor(labelText.length * percent)) + '...';\n                        } else {\n                            return '';\n                        }\n                    }\n\n                    return labelText;\n                });\n\n            function getTextPositionData(d) {\n                this.textSizeInPx = this.textSizeInPx || this.getComputedTextLength();\n                var from = xTimeScale(d.from);\n                var to = xTimeScale(d.to);\n                return {\n                    xPosition: from,\n                    upToPosition: to,\n                    width: to - from,\n                    textWidth: this.textSizeInPx\n                }\n            }\n        }\n    }\n    extendOptions(ext = {}) {\n        let defaultOptions = {\n            intervalMinWidth: 8, // px\n            tip: undefined,\n            textTruncateThreshold: 30,\n            enableLiveTimer: false,\n            timerTickInterval: 1000,\n            hideGroupLabels: false\n        };\n        Object.keys(ext).map(k => defaultOptions[k] = ext[k]);\n        return defaultOptions;\n    }\n    getPointMinDt(p) {\n        return p.type === TimelineChart.TYPE.POINT ? p.at : p.from;\n    }\n    getPointMaxDt(p) {\n        return p.type === TimelineChart.TYPE.POINT ? p.at : p.to;\n    }\n    onVizChange(fn) {\n        this.onVizChangeFn = fn;\n        return this;\n    }\n\n}\n\nTimelineChart.TYPE = {\n    POINT: Symbol(),\n    INTERVAL: Symbol()\n};\n\nmodule.exports = TimelineChart;\n "]}