{"version":3,"sources":["case-timer-event-browser.js"],"names":["CaseTimerEventBrowser","element","caseData","opts","self","d3","selection","prototype","appendHTML","enter","HTMLString","select","appendChild","document","importNode","DOMParser","parseFromString","body","childNodes","chartContainer","getElementById","caseTimerDetailsContainer","eventDetailsContainer","selectedSnapshotContainer","caseTimerPropertyConfigs","propertyLabel","propertyValueSelector","x","CaseTimerType","onClick","Name","separateWordsInCamelCaseStringWithSpaces","CurrentEffectiveClockState","CurrentNonWorkingTimePeriodTypes","DisplayOnCase","NonWorkingEventSource","RespectNonWorkingSchedule","RespectSlaClock","RespectWorkCalendar","filter","r","join","Offset","RunTime","ElapsedTime","LastCalculated","Started","Stopped","Id","Events","renderEventDetailsTable","d","caseTimerEventPropertyConfigs","EventTime","EventIdentifierString","IsDerived","IsInherited","IsCaseTimerCreationEvent","AppIdentifier","CaseTimerSnapshot","displaySnapshotDetails","caseTimerSnapshotPropertyConfigs","SnapshotTime","renderCaseData","caseDataToRender","alert","Timers","length","console","log","caseTimerTimelineData","transformCaseTimerDataToTimelineData","renderCaseTimersTable","renderTimeline","container","timelineData","removeAllChildNodesOfElement","timeline","TimelineChart","tip","formatTipText","groupHeight","svgHeight","attr","style","str","replace","trim","formatDate","date","moment","format","createLabelFromIntervalDuration","formatDuration","to","from","formatLabelForTipHtml","label","later","earlier","msDiff","diff","duration","parts","_data","years","months","days","hours","minutes","seconds","lbl","result","at","isUUID","value","match","index","firstChild","removeChild","allEvents","selectedEvents","renderTableOfObjects","allCaseTimers","selectedTimers","tableContainer","propertyConfigs","itemsToRender","itemsToHighlight","table","append","classed","headerRow","forEach","text","pc","tbody","tr","findIndex","o","cte","selectAll","data","html","getHtmlContentForPropertyValue","on","propertyConfig","obj","propertyValue","undefined","constructor","Date","caseTimerSnapshot","normalizeProperties","caseTimerArray","convertDateProperties","propertyNamesArray","pn","ct","e","ssd","SnapshotData","CaseTimer","Sla","restoreReferencesInCaseTimerObjectGraph","Case","originalCaseTimerArray","copyOfCaseTimerArray","allTimelineSeries","map","points","nest","key","entries","type","TYPE","POINT","customClass","values","eventsForTimerSeries","groupingKey","now","intervalConfigs","intervalSeriesEventGroupingKeyFn","groupLabelFn","intervalLabelFn","startEventId","endEventId","intervalType","evt","EventData","TemporalEventArgs","NonWorkingPeriod","SourceId","SourceName","SourceNameName","eventIntervalGroupingKeyFn","matchingIntervalConfig","find","includes","ic","timerIntervalSeriesArray","intervalConfigKey","intervalGroup","split","intervalConfig","eventsOfInterest","intervals","curEvt","i","nextEvt","push","INTERVAL","allSeriesForTimer","concat","reduce","accumulator","currentValue","newGroupingKey","lastGroupKey","newCaseData","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAAMA,qB;AACF,uCAAYC,OAAZ,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AAAA;;AACjC,gBAAIC,OAAO,IAAX;;AAEA;AACA,gBAAI,CAACC,GAAGC,SAAH,CAAaC,SAAb,CAAuBC,UAA5B,EAAwC;AACpCH,mBAAGC,SAAH,CAAaC,SAAb,CAAuBC,UAAvB,GACAH,GAAGC,SAAH,CAAaG,KAAb,CAAmBF,SAAnB,CAA6BC,UAA7B,GAA0C,UAASE,UAAT,EAAqB;AAC3D,2BAAO,KAAKC,MAAL,CAAY,YAAW;AAC1B,+BAAO,KAAKC,WAAL,CAAiBC,SAASC,UAAT,CAAoB,IAAIC,SAAJ,GAAgBC,eAAhB,CAAgCN,UAAhC,EAA4C,WAA5C,EAAyDO,IAAzD,CAA8DC,UAA9D,CAAyE,CAAzE,CAApB,EAAiG,IAAjG,CAAjB,CAAP;AACH,qBAFM,CAAP;AAGH,iBALD;AAMH;;AAEDb,eAAGM,MAAH,CAAUV,OAAV,EAAmBO,UAAnB;;AA8CA,gBAAMW,iBAAiBN,SAASO,cAAT,CAAwB,QAAxB,CAAvB;AACA,gBAAMC,4BAA4BR,SAASO,cAAT,CAAwB,oBAAxB,CAAlC;AACA,gBAAME,wBAAwBT,SAASO,cAAT,CAAwB,eAAxB,CAA9B;AACA,gBAAMG,4BAA4BV,SAASO,cAAT,CAAwB,kBAAxB,CAAlC;;AAEA,gBAAMI,2BAA2B,CAC7B,EAAEC,eAAe,MAAjB,EAAyBC,uBAAuB;AAAA,2BAAKC,EAAEC,aAAP;AAAA,iBAAhD,EAAsEC,SAAS,IAA/E,EAD6B,EAE7B,EAAEJ,eAAe,MAAjB,EAAyBC,uBAAuB;AAAA,2BAAKC,EAAEG,IAAP;AAAA,iBAAhD,EAA6DD,SAAS,IAAtE,EAF6B,EAG7B,EAAEJ,eAAe,+BAAjB,EAAkDC,uBAAuB;AAAA,2BAAKK,yCAAyCJ,EAAEK,0BAA3C,CAAL;AAAA,iBAAzE,EAAsJH,SAAS,IAA/J,EAH6B,EAI7B,EAAEJ,eAAe,sCAAjB,EAAyDC,uBAAuB;AAAA,2BAAKC,EAAEM,gCAAP;AAAA,iBAAhF,EAAyHJ,SAAS,IAAlI,EAJ6B,EAK7B,EAAEJ,eAAe,cAAjB,EAAiCC,uBAAuB;AAAA,2BAAKC,EAAEO,aAAP;AAAA,iBAAxD,EAA8EL,SAAS,IAAvF,EAL6B,EAM7B,EAAEJ,eAAe,yBAAjB,EAA4CC,uBAAuB;AAAA,2BAAKC,EAAEQ,qBAAP;AAAA,iBAAnE,EAAiGN,SAAS,IAA1G,EAN6B,EAO7B,EAAEJ,eAAe,UAAjB,EAA6BC,uBAAuB;AAAA,2BAChD,CAACC,EAAES,yBAAF,GAA8B,mCAA9B,GAAoE,IAArE,EACCT,EAAEU,eAAF,GAAoB,wBAApB,GAA+C,IADhD,EAECV,EAAEW,mBAAF,GAAwB,4BAAxB,GAAuD,IAFxD,EAE8DC,MAF9D,CAEqE;AAAA,+BAAK,CAAC,CAACC,CAAP;AAAA,qBAFrE,EAE+EC,IAF/E,CAEoF,IAFpF,CADgD;AAAA,iBAApD,EAG+FZ,SAAS,IAHxG,EAP6B,EAY7B,EAAEJ,eAAe,kCAAjB,EAAqDC,uBAAuB;AAAA,2BAAQC,EAAEe,MAAV,WAAsBf,EAAEgB,OAAxB,WAAqChB,EAAEiB,WAAvC;AAAA,iBAA5E,EAAkIf,SAAS,IAA3I,EAZ6B;AAazB;AACA;AACA;;AAEJ,cAAEJ,eAAe,iBAAjB,EAAoCC,uBAAuB;AAAA,2BAAKC,EAAEkB,cAAP;AAAA,iBAA3D,EAAkFhB,SAAS,IAA3F,EAjB6B;AAkB7B;AACA;AACA;AACA;AACA;AACA,cAAEJ,eAAe,SAAjB,EAA4BC,uBAAuB;AAAA,2BAAKC,EAAEmB,OAAP;AAAA,iBAAnD,EAAmEjB,SAAS,IAA5E,EAvB6B,EAwB7B,EAAEJ,eAAe,SAAjB,EAA4BC,uBAAuB;AAAA,2BAAKC,EAAEoB,OAAP;AAAA,iBAAnD,EAAmElB,SAAS,IAA5E,EAxB6B,EAyB7B,EAAEJ,eAAe,IAAjB,EAAuBC,uBAAuB;AAAA,2BAAKC,EAAEqB,EAAP;AAAA,iBAA9C,EAAyDnB,SAAS,IAAlE,EAzB6B,EA0B7B,EAAEJ,eAAe,QAAjB,EAA2BC,uBAAuB;AAAA,2BAAKC,EAAEsB,MAAP;AAAA,iBAAlD,EAAiEpB,SAAS;AAAA,2BAAKqB,wBAAwBC,EAAEF,MAA1B,EAAkC,EAAlC,CAAL;AAAA,iBAA1E,EA1B6B,CAAjC;;AA6BA,gBAAMG,gCAAgC,CAClC,EAAE3B,eAAe,YAAjB,EAA+BC,uBAAuB;AAAA,2BAAKyB,EAAEE,SAAP;AAAA,iBAAtD,EAAwExB,SAAS,IAAjF,EADkC,EAElC,EAAEJ,eAAe,kBAAjB,EAAqCC,uBAAuB;AAAA,2BAAKyB,EAAEG,qBAAP;AAAA,iBAA5D,EAA0FzB,SAAS,IAAnG,EAFkC,EAGlC,EAAEJ,eAAe,YAAjB,EAA+BC,uBAAuB;AAAA,2BAAKyB,EAAEI,SAAP;AAAA,iBAAtD,EAAwE1B,SAAS,IAAjF,EAHkC,EAIlC,EAAEJ,eAAe,cAAjB,EAAiCC,uBAAuB;AAAA,2BAAKyB,EAAEK,WAAP;AAAA,iBAAxD,EAA4E3B,SAAS,IAArF,EAJkC,EAKlC,EAAEJ,eAAe,aAAjB,EAAgCC,uBAAuB;AAAA,2BAAKyB,EAAEM,wBAAP;AAAA,iBAAvD,EAAwF5B,SAAS,IAAjG,EALkC,EAMlC,EAAEJ,eAAe,QAAjB,EAA2BC,uBAAuB;AAAA,2BAAKyB,EAAEO,aAAP;AAAA,iBAAlD,EAAwE7B,SAAS,IAAjF,EANkC,EAOlC,EAAEJ,eAAe,IAAjB,EAAuBC,uBAAuB;AAAA,2BAAKyB,EAAEH,EAAP;AAAA,iBAA9C,EAAyDnB,SAAS,IAAlE,EAPkC,EAQlC,EAAEJ,eAAe,UAAjB,EAA6BC,uBAAuB;AAAA,2BAAKyB,EAAEQ,iBAAP;AAAA,iBAApD,EAA8E9B,SAAS;AAAA,2BAAK+B,uBAAuBT,EAAEQ,iBAAzB,CAAL;AAAA,iBAAvF,EARkC,CAAtC;;AAWA,gBAAME,mCAAmC,CACrC,EAAEpC,eAAe,IAAjB,EAAuBC,uBAAuB;AAAA,2BAAKyB,EAAEH,EAAP;AAAA,iBAA9C,EAAyDnB,SAAS,IAAlE,EADqC,EAErC,EAAEJ,eAAe,YAAjB,EAA+BC,uBAAuB;AAAA,2BAAKyB,EAAEI,SAAP;AAAA,iBAAtD,EAAwE1B,SAAS,IAAjF,EAFqC,EAGrC,EAAEJ,eAAe,eAAjB,EAAkCC,uBAAuB;AAAA,2BAAKyB,EAAEW,YAAP;AAAA,iBAAzD,EAA8EjC,SAAS,IAAvF,EAHqC,CAAzC;;AAMA,qBAASkC,cAAT,CAAwBC,gBAAxB,EAA0C;AACtC,oBAAI,CAACA,gBAAL,EAAuB;AAAEC,0BAAM,6BAAN,EAAsC;AAAS;AACxE,oBAAI,CAACD,iBAAiBE,MAAjB,IAA2B,EAA5B,EAAgCC,MAAhC,IAA0C,CAA9C,EAAiD;AAAEF,0BAAM,8BAAN,EAAuC;AAAS;;AAEnGG,wBAAQC,GAAR,CAAY,iBAAZ,EAA+BL,gBAA/B;;AAEA;;AAEA,oBAAIM,wBAAwBC,qCAAqCP,iBAAiBE,MAAtD,CAA5B;AACAE,wBAAQC,GAAR,CAAY,wBAAZ,EAAsCC,qBAAtC;;AAEAE,sCAAsBR,iBAAiBE,MAAvC;;AAEAO,+BAAetD,cAAf,EAA+BmD,qBAA/B;AACH;;AAEDlE,iBAAK2D,cAAL,GAAsBA,cAAtB;;AAEA3D,iBAAK2D,cAAL,CAAoB7D,QAApB;;AAEA;;;AAGA,qBAASuE,cAAT,CAAwBC,SAAxB,EAAmCC,YAAnC,EAAiD;AAC7CC,6CAA6BF,SAA7B;;AAEA,oBAAMG,WAAW,IAAIC,aAAJ,CAAkBJ,SAAlB,EAA6BC,YAA7B,EAA2C;AACxD;AACAI,yBAAKC,aAFmD;AAGxDC,iCAAa;AAH2C,iBAA3C,CAAjB,CAH6C,CAOzC;;AAEJ;AACA,oBAAIC,YAAY7E,GAAGM,MAAH,CAAU+D,SAAV,EAAqB/D,MAArB,CAA4B,KAA5B,EAAmCwE,IAAnC,CAAwC,QAAxC,IAAkD,CAAlE;AACA9E,mBAAGM,MAAH,CAAU+D,SAAV,EAAqBU,KAArB,CAA2B,QAA3B,EAAsCF,YAAU,EAAX,GAAe,IAApD;AACH;;AAGD,qBAASnD,wCAAT,CAAkDsD,GAAlD,EAAuD;AACnD,uBAAO,CAACA,OAAO,EAAR,EAAYC,OAAZ,CAAoB,UAApB,EAAgC,KAAhC,EAAuCC,IAAvC,EAAP;AACH;;AAED,qBAASC,UAAT,CAAoBC,IAApB,EAA0B;AACtB;AACA;AACA,uBAAOC,OAAOD,IAAP,EAAaE,MAAb,CAAoB,2BAApB,CAAP;AACH;;AAED,gBAAIC,kCAAkC,SAAlCA,+BAAkC,CAASzC,CAAT,EAAW;AAC7C,uBAAO0C,eAAe1C,EAAE2C,EAAjB,EAAqB3C,EAAE4C,IAAvB,CAAP;AACH,aAFD;;AAIA,qBAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAClC,uBAAO,CAACA,SAAS,EAAV,EAAcX,OAAd,CAAsB,IAAtB,EAA4B,QAA5B,EAAsCA,OAAtC,CAA8C,MAA9C,EAAsD,MAAtD,CAAP;AACH;;AAED,qBAASO,cAAT,CAAwBK,KAAxB,EAA+BC,OAA/B,EAAwC;AACpC,oBAAIC,SAASV,OAAOQ,KAAP,EAAcG,IAAd,CAAmBX,OAAOS,OAAP,CAAnB,CAAb;AACA,oBAAIG,WAAWZ,OAAOY,QAAP,CAAgBF,MAAhB,CAAf;AACA,oBAAIG,QAAQ,CACRD,SAASE,KAAT,CAAeC,KAAf,GAAuBH,SAASE,KAAT,CAAeC,KAAf,GAAqB,UAA5C,GAAyD,IADjD,EAERH,SAASE,KAAT,CAAeE,MAAf,GAAwBJ,SAASE,KAAT,CAAeE,MAAf,GAAsB,WAA9C,GAA4D,IAFpD,EAGRJ,SAASE,KAAT,CAAeG,IAAf,GAAsBL,SAASE,KAAT,CAAeG,IAAf,GAAoB,SAA1C,GAAsD,IAH9C,EAIRL,SAASE,KAAT,CAAeI,KAAf,GAAuBN,SAASE,KAAT,CAAeI,KAAf,GAAqB,UAA5C,GAAyD,IAJjD,EAKRN,SAASE,KAAT,CAAeK,OAAf,GAAyBP,SAASE,KAAT,CAAeK,OAAf,GAAuB,YAAhD,GAA+D,IALvD,EAMRP,SAASE,KAAT,CAAeM,OAAf,GAAyBR,SAASE,KAAT,CAAeM,OAAf,GAAuB,YAAhD,GAA+D,IANvD,EAOVvE,MAPU,CAOH,UAASZ,CAAT,EAAW;AAAC,2BAAOA,KAAG,IAAV;AAAgB,iBAPzB,CAAZ;AAQA,uBAAO4E,MAAM9D,IAAN,CAAW,GAAX,CAAP;AACH;;AAED,qBAASuC,aAAT,CAAuB7B,CAAvB,EAA0B;AACtB;AACA,oBAAI4D,MAAM,OAAO5D,EAAE8C,KAAT,IAAmB,UAAnB,GAAgCD,sBAAsB7C,EAAE8C,KAAF,CAAQ9C,CAAR,IAAW,EAAjC,CAAhC,GAAuE,OAAOA,EAAE8C,KAAT,IAAiB,QAAjB,GAA4BD,sBAAsB7C,EAAE8C,KAAxB,CAA5B,GAA6D,YAA9I;AACA;AACA,oBAAIe,SAAS,CAAC,CAAC7D,EAAE8D,EAAJ,GACTF,MAAI,gBAAJ,GAAqBvB,WAAWrC,EAAE8D,EAAb,CADZ,GAETF,MAAI,gBAAJ,GAAqBvB,WAAWrC,EAAE4C,IAAb,CAArB,GAAwC,UAAxC,GAAmDP,WAAWrC,EAAE2C,EAAb,CAAnD,GAAoE,gBAApE,GAAqFD,eAAe1C,EAAE2C,EAAjB,EAAqB3C,EAAE4C,IAAvB,CAFzF;AAGA,uBAAOiB,MAAP;AACH;;AAGD,qBAASE,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,oBAAIH,SAASG,MAAMC,KAAN,CAAY,4EAAZ,CAAb;AACA,uBAAO,CAAC,CAACJ,MAAF,IAAYA,OAAOK,KAAP,KAAiB,CAApC;AACH;;AAED,qBAASzC,4BAAT,CAAsCF,SAAtC,EAAiD;AAC7C;AACA,uBAAOA,UAAU4C,UAAjB,EAA6B;AACzB5C,8BAAU6C,WAAV,CAAsB7C,UAAU4C,UAAhC;AACH;AACJ;;AAED,qBAASpE,uBAAT,CAAiCsE,SAAjC,EAA4CC,cAA5C,EACA;AACI7C,6CAA6BtD,qBAA7B;AACA;AACAoG,qCAAqBpG,qBAArB,EAA4C8B,6BAA5C,EAA2EoE,SAA3E,EAAsFC,cAAtF;AACH;;AAED,qBAASjD,qBAAT,CAA+BmD,aAA/B,EAA8CC,cAA9C,EACA;AACIhD,6CAA6BvD,yBAA7B;AACAqG,qCAAqBrG,yBAArB,EAAgDG,wBAAhD,EAA0EmG,aAA1E,EAAyFC,cAAzF;AACH;;AAGD,qBAASF,oBAAT,CAA8BG,cAA9B,EAA8CC,eAA9C,EAA+DC,aAA/D,EAA8EC,gBAA9E,EACA;AACI;AACA,oBAAI,CAACD,aAAL,EACA;AACI9D,0BAAM,0CAAN;AACA;AACH;;AAED+D,mCAAmBA,oBAAoB,EAAvC;;AAEA,oBAAIC,QAAQ5H,GAAGM,MAAH,CAAUkH,cAAV,EAA0BK,MAA1B,CAAiC,OAAjC,EAA0CC,OAA1C,CAAkD,OAAlD,EAA2D,IAA3D,CAAZ;AACA,oBAAIC,YAAYH,MAAMC,MAAN,CAAa,OAAb,EAAsBA,MAAtB,CAA6B,IAA7B,CAAhB;AACA;AACAJ,gCAAgBO,OAAhB,CAAwB;AAAA,2BAAMD,UAAUF,MAAV,CAAiB,IAAjB,EAAuBI,IAAvB,CAA4BC,GAAG9G,aAA/B,CAAN;AAAA,iBAAxB;;AAEA,oBAAI+G,QAAQP,MAAMC,MAAN,CAAa,OAAb,CAAZ;;AAEAH,8BAAcM,OAAd,CAAsB,eAAO;AACzB,wBAAII,KAAKD,MAAMN,MAAN,CAAa,IAAb,EACJC,OADI,CACI,aADJ,EACmBH,iBAAiBU,SAAjB,CAA2B;AAAA,+BAAKC,KAAKC,GAAV;AAAA,qBAA3B,KAA6C,CAAC,CADjE,EAEJC,SAFI,CAEM,IAFN,EAEYC,IAFZ,CAEiBhB,eAFjB,CAAT;AAGAW,uBAAGhI,KAAH,GAAWyH,MAAX,CAAkB,IAAlB,EACK/C,IADL,CACU,YADV,EACwB;AAAA,+BAAKhC,EAAE1B,aAAP;AAAA,qBADxB,EAEKsH,IAFL,CAEU;AAAA,+BAAKC,+BAA+B7F,CAA/B,EAAkCyF,GAAlC,CAAL;AAAA,qBAFV,EAGKK,EAHL,CAGQ,OAHR,EAGiB,aAAK;AACd,4BAAI,CAAC,CAAC9F,EAAEtB,OAAR,EAAiBsB,EAAEtB,OAAF,CAAU+G,GAAV;AACpB,qBALL;AAMH,iBAVD;;AAYA,yBAASI,8BAAT,CAAwCE,cAAxC,EAAwDC,GAAxD,EACA;AACI,wBAAIC,gBAAgBF,eAAexH,qBAAf,CAAqCyH,GAArC,CAApB;;AAEA,wBAAIC,kBAAkBC,SAAtB,EACA;AACI,+BAAO,EAAP;AACH,qBAHD,MAIK,IAAID,kBAAkB,IAAtB,EACL;AACI,+BAAO,QAAP;AACH,qBAHI,MAIA,IAAI,OAAOA,aAAP,IAAwB,QAA5B,EACL;AACI;AACA;AACA,+BAAOA,aAAP;AACH,qBALI,MAMA,IAAI,OAAOA,aAAP,IAAwB,SAA5B,EACL;AACI;AACA,+BAAO,6BAA2B,CAAC,CAACA,aAAF,GAAkB,SAAlB,GAA8B,EAAzD,IAA6D,6BAApE;AACH,qBAJI,MAKA,IAAIA,cAAcE,WAAd,IAA8B,IAAIC,IAAJ,EAAD,CAAaD,WAA9C,EACL;AACI,+BAAO9D,WAAW4D,aAAX,CAAP;AACH,qBAHI,MAIA,IAAG,CAAC,CAACF,eAAerH,OAApB,EACL;AACI,+BAAO,0CAAP;AACH;AACD,2BAAO,sCAAP;AACH;AACJ;;AAID;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,qBAAS+B,sBAAT,CAAgC4F,iBAAhC,EACA;AACIpF,wBAAQC,GAAR,CAAYmF,iBAAZ;;AAEA;AACA,uBAAOjI,0BAA0B+F,UAAjC,EAA6C;AACzC/F,8CAA0BgG,WAA1B,CAAsChG,0BAA0B+F,UAAhE;AACH;;AAEDI,qCAAqBnG,yBAArB,EAAgDsC,gCAAhD,EAAkF,CAAC2F,iBAAD,CAAlF,EAAuG,CAACA,iBAAD,CAAvG;AACH;;AAGD,qBAASC,mBAAT,CAA6BC,cAA7B,EACA;AACI,oBAAIC,wBAAwB,SAAxBA,qBAAwB,CAASR,GAAT,EAAcS,kBAAd,EAC5B;AACI,wBAAI,CAACT,GAAL,EAAU;AACVS,uCAAmBvB,OAAnB,CAA2B,cAAM;AAC7B,4BAAIlB,QAAQgC,IAAIU,EAAJ,CAAZ;AACA,4BAAI1C,UAAU,IAAV,IAAkB,OAAOA,KAAP,KAAiB,QAAvC,EACIgC,IAAIU,EAAJ,IAAU,IAAIN,IAAJ,CAASpC,KAAT,CAAV;AACP,qBAJD;AAKH,iBARD;;AAUAuC,+BAAerB,OAAf,CAAuB,cAAM;AACzByB,uBAAG7G,MAAH,CAAUoF,OAAV,CAAkB,aAAK;AACnBsB,8CAAsBI,CAAtB,EAAyB,CAAE,WAAF,EAAe,cAAf,CAAzB;AACAJ,8CAAsBI,EAAEpG,iBAAxB,EAA2C,CAAE,cAAF,EAAkB,cAAlB,CAA3C;AACA,4BAAIqG,MAAMD,EAAEpG,iBAAF,CAAoBsG,YAA9B;AACAN,8CAAsBK,GAAtB,EAA2B,CAAE,cAAF,EAAkB,cAAlB,CAA3B;AACAL,8CAAsBK,IAAIE,SAA1B,EAAqC,CAAE,gBAAF,EAAoB,cAApB,EAAoC,SAApC,EAA+C,SAA/C,CAArC;AACAP,8CAAsBK,IAAIG,GAA1B,EAA+B,CAAE,+BAAF,EAAmC,+BAAnC,EAAoE,cAApE,CAA/B;AACH,qBAPD;AAQAR,0CAAsBG,EAAtB,EAA0B,CAAE,gBAAF,EAAoB,cAApB,EAAoC,SAApC,EAA+C,SAA/C,CAA1B;AACH,iBAVD;AAWH;;AAED,qBAASM,uCAAT,CAAiDV,cAAjD,EACA;AACI;AACAA,+BAAerB,OAAf,CAAuB,cACvB;AACIyB,uBAAG7G,MAAH,CAAUoF,OAAV,CAAkB,aAClB;AACI;AACA0B,0BAAEG,SAAF,GAAcJ,EAAd;;AAGA;AACA;AACA;AACA,4BAAIE,MAAMD,EAAEpG,iBAAF,CAAoBsG,YAA9B;AACA,4BAAID,IAAIE,SAAJ,CAActI,aAAd,KAAgC,KAApC,EACA;AACI;AACA,gCAAIoI,IAAIG,GAAJ,IAAW,IAAf,EACA;AACIH,oCAAIG,GAAJ,CAAQD,SAAR,GAAoBF,IAAIE,SAAxB;AACH;AACJ,yBAPD,MAQK,IAAIF,IAAIG,GAAJ,IAAW,IAAf,EACL;AACIH,gCAAIG,GAAJ,CAAQD,SAAR,CAAkBG,IAAlB,GAAyBL,IAAIE,SAAJ,CAAcG,IAAvC;AACH;AACD;AACA,4BAAIL,IAAIG,GAAJ,IAAW,IAAX,IAAmBH,IAAIG,GAAJ,CAAQD,SAAR,CAAkBG,IAAlB,CAAuBF,GAAvB,IAA8BH,IAAIG,GAAzD,EACA;AACIH,gCAAIG,GAAJ,CAAQD,SAAR,CAAkBG,IAAlB,CAAuBF,GAAvB,GAA6BH,IAAIG,GAAjC;AACH;AACJ,qBA3BD;AA4BH,iBA9BD;AA+BH;;AAGD,qBAAS5F,oCAAT,CAA8C+F,sBAA9C,EACA;AACI;AACA;AACA,oBAAIC,uBAAuBD,sBAA3B;;AAEAF,wDAAwCG,oBAAxC;;AAEAd,oCAAoBc,oBAApB;;AAEA,oBAAIC,oBAAoBD,qBAAqBE,GAArB,CAAyB,cACjD;AACI;;AAEA;AACA;AACA,wBAAIC,SAAUrK,GAAGsK,IAAH,GAAUC,GAAV,CAAc;AAAA,+BAAKzH,EAAEE,SAAF,GAAY,CAAjB;AAAA,qBAAd,EAAkCwH,OAAlC,CAA0Cf,GAAG7G,MAA7C,CAAD,CACRwH,GADQ,CACJ,aAAK;AACN;AACA,+BAAO;AACHK,kCAAMhG,cAAciG,IAAd,CAAmBC,KADtB;AAEHC,yCAAa,aAFV;AAGHhF,mCAAO,iBAAU;AACb,uCAAO9C,EAAE+H,MAAF,CAAS/G,MAAT,GAAgB,QAAhB,IAA0BhB,EAAE+H,MAAF,CAAS/G,MAAT,IAAmB,CAAnB,GAAuB,EAAvB,GAA4B,GAAtD,IAA2D,OAA3D,GACHhB,EAAE+H,MAAF,CAAST,GAAT,CAAa;AAAA,mDAAWV,EAAEzG,qBAAb;AAAA,iCAAb,EAAuDb,IAAvD,CAA4D,EAA5D,CADJ;AAEH,6BANE;AAOHwE,gCAAI,IAAIsC,IAAJ,CAASpG,EAAEyH,GAAF,GAAM,CAAf,CAPD;AAQH9B,kCAAM3F,EAAE+H,MARL;AASHrJ,qCAAS,mBAAU;AACf2C,sDAAsB+F,oBAAtB,EAA4C,CAAET,EAAF,CAA5C;AACA5G,wDAAwB4G,GAAG7G,MAA3B,EAAmCE,EAAE+H,MAArC;AACH;AAZE,yBAAP;AAcH,qBAjBQ,CAAb;;AAmBA,wBAAIC,uBAAuB;AACvBlF,+BAAO,2BAAyB6D,GAAGhI,IAA5B,GAAiC,GADjB;AAEvBsJ,qCAAatB,GAAG9G,EAFO,EAEF;AACrB8F,8BAAM4B;AAHiB,qBAA3B;;AAMA,wBAAIW,MAAM,IAAI9B,IAAJ,EAAV;AACA,wBAAI+B,kBAAkB,CAClB;AACIV,6BAAK,wBADT;AAEIW,0DAAkC;AAAA,mCAAO,qBAAP;AAAA,yBAFtC;AAGIC,sCAAc;AAAA,mCAAO,cAAP;AAAA,yBAHlB;AAIIC,yCAAiB;AAAA,mCAAO,eAAP;AAAA,yBAJrB;AAKIC,sCAAc,0BALlB;AAMIC,oCAAY,0BANhB;AAOIC,sCAAc,qBAPlB;AAQIX,qCAAa;AARjB,qBADkB,EAWlB;AACIL,6BAAK,yBADT;AAEIW,0DAAkC;AAAA,mCAAO,sBAAP;AAAA,yBAFtC;AAGIC,sCAAc;AAAA,mCAAO,eAAP;AAAA,yBAHlB;AAIIC,yCAAiB;AAAA,mCAAO,eAAP;AAAA,yBAJrB;AAKIC,sCAAc,8BALlB;AAMIC,oCAAY,8BANhB;AAOIC,sCAAc,sBAPlB;AAQIX,qCAAa;AARjB,qBAXkB,EAqBlB;AACIL,6BAAK,0CADT;AAEIW,0DAAkC;AAAA,mCAAO,2CAAyCM,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDC,QAAjG;AAAA,yBAFtC;AAGIT,sCAAc;AAAA,mCAAO,wCAAsCK,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDE,UAA9F;AAAA,yBAHlB;AAIIT,yCAAiB;AAAA,mCAAO,wCAAwCI,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDE,UAAhG;AAAA,yBAJrB;AAKIR,sCAAc,6CALlB;AAMIC,oCAAY,6CANhB;AAOIC,sCAAc,uCAPlB;AAQIX,qCAAa;AARjB,qBArBkB,EA+BlB;AACIL,6BAAK,qBADT;AAEIW,0DAAkC;AAAA,mCAAO,sBAAoBM,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCE,QAA3D;AAAA,yBAFtC;AAGIT,sCAAc;AAAA,mCAAO,mBAAmBK,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDE,UAA3E;AAAA,yBAHlB;AAIIT,yCAAiB;AAAA,mCAAO,mBAAmBI,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDE,UAA3E;AAAA,yBAJrB;AAKIR,sCAAc,wBALlB;AAMIC,oCAAY,wBANhB;AAOIC,sCAAc,kBAPlB;AAQIX,qCAAa;AARjB,qBA/BkB,EAyClB;AACIL,6BAAK,8BADT;AAEIW,0DAAkC;AAAA,mCAAO,+BAA6BM,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCE,QAApE;AAAA,yBAFtC;AAGIT,sCAAc;AAAA,mCAAO,8BAA4BK,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDG,cAApF;AAAA,yBAHlB;AAIIV,yCAAiB;AAAA,mCAAO,8BAA8BI,IAAIC,SAAJ,CAAcC,iBAAd,CAAgCC,gBAAhC,CAAiDE,UAAtF;AAAA,yBAJrB;AAKIR,sCAAc,0BALlB;AAMIC,oCAAY,0BANhB;AAOIC,sCAAc,2BAPlB;AAQIX,qCAAa;AARjB,qBAzCkB,CAAtB;AAoDA;AACA;;AAEA;AACA,wBAAImB,6BAA6B,SAA7BA,0BAA6B,MAAO;AACpC;AACA,4BAAIC,yBAAyBf,gBAAgBgB,IAAhB,CAAqB;AAAA,mCAAMT,IAAIvI,qBAAJ,CAA0BiJ,QAA1B,CAAmCC,GAAGd,YAAtC,KAAuDG,IAAIvI,qBAAJ,CAA0BiJ,QAA1B,CAAmCC,GAAGb,UAAtC,CAA7D;AAAA,yBAArB,CAA7B;AACA,4BAAI,CAACU,sBAAL,EACI,OAAO,QAAP;AACJ;AACA,+BAAOA,uBAAuBzB,GAAvB,GAA2B,IAA3B,GAAgCyB,uBAAuBd,gCAAvB,CAAwDM,GAAxD,CAAvC;AACH,qBAPD;;AASA;AACA;AACA,wBAAIY,2BAA2BpM,GAAGsK,IAAH,GAC1BC,GAD0B,CACtBwB,0BADsB,EACMvB,OADN,CACcf,GAAG7G,MADjB,EAE1BV,MAF0B,CAEnB;AAAA,+BAAKoG,EAAEiC,GAAF,IAAS,QAAd;AAAA,qBAFmB,EAEK;AAFL,qBAG1BH,GAH0B,CAGtB,yBAAiB;;AAElB;AACA,4BAAIiC,oBAAoBC,cAAc/B,GAAd,CAAkBgC,KAAlB,CAAwB,IAAxB,EAA8B,CAA9B,CAAxB;AACA;AACA,4BAAIC,iBAAiBvB,gBAAgBgB,IAAhB,CAAqB;AAAA,mCAAME,GAAG5B,GAAH,IAAU8B,iBAAhB;AAAA,yBAArB,CAArB;;AAEA,4BAAII,mBAAmBH,cAAczB,MAArC;AACA;AACA,4BAAI6B,YAAY,EAAhB;;AATkB;AAYd,gCAAIC,SAASF,iBAAiBG,CAAjB,CAAb;AACA,gCAAIC,UAAUJ,iBAAiB3I,MAAjB,GAA0B8I,IAAI,CAA9B,GAAkCH,iBAAiBG,IAAI,CAArB,CAAlC,GAA4D,IAA1E;AACA,gCAAIT,KAAKK,cAAT;;AAEA;AACA,gCAAIK,WAAW,IAAf,EACA;AACIH,0CAAUI,IAAV,CAAe;AACXrC,0CAAMhG,cAAciG,IAAd,CAAmBqC,QADd;AAEXxB,kDAAcY,GAAGZ,YAFN;AAGXX,iDAAauB,GAAGvB,WAHL;AAIXhF,2CAAOuG,GAAGf,eAAH,CAAmBuB,MAAnB,CAJI;AAKXjH,0CAAM,IAAIwD,IAAJ,CAASyD,OAAO3J,SAAhB,CALK;AAMXyC,wCAAI,IAAIyD,IAAJ,CAAS2D,QAAQ7J,SAAjB,CANO;AAOXyF,0CAAM,CAACkE,MAAD,EAASE,OAAT,CAPK;AAQXrL,6CAAS,mBAAU;AACf2C,8DAAsB+F,oBAAtB,EAA4C,CAAET,EAAF,CAA5C;AACA5G,gEAAwB4G,GAAG7G,MAA3B,EAAmC,CAAC+J,MAAD,EAASE,OAAT,CAAnC;AACH;AAXU,iCAAf;AAaH;AACD;AAhBA,iCAkBA;AACIH,8CAAUI,IAAV,CAAe;AACXrC,8CAAMhG,cAAciG,IAAd,CAAmBqC,QADd;AAEXxB,sDAAcY,GAAGZ,YAFN;AAGXX,qDAAauB,GAAGvB,WAHL;AAIXhF,+CAAOuG,GAAGf,eAAH,CAAmBuB,MAAnB,CAJI;AAKXjH,8CAAM,IAAIwD,IAAJ,CAASyD,OAAO3J,SAAhB,CALK;AAMXyC,4CAAIuF,GANO;AAOXvC,8CAAM,CAACkE,MAAD,CAPK;AAQXnL,iDAAS,mBAAU;AACf2C,kEAAsB+F,oBAAtB,EAA4C,CAAET,EAAF,CAA5C;AACA5G,oEAAwB4G,GAAG7G,MAA3B,EAAmC,CAAC+J,MAAD,CAAnC;AACH;AAXU,qCAAf;AAaH;AAjDa;;AAUlB,6BAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIH,iBAAiB3I,MAApC,EAA4C8I,KAAK,CAAjD,EACA;AAAA;AAuCC;;AAED;AACA,+BAAO;AACHhH,mCAAO4G,eAAerB,YAAf,CAA4BmB,cAAczB,MAAd,CAAqB,CAArB,CAA5B,CADJ;AAEHE,yCAAatB,GAAG9G,EAFb,EAEkB;AACrB8F,kCAAMiE;AAHH,yBAAP;AAKH,qBA7D0B,CAA/B;AA8DA3I,4BAAQC,GAAR,CAAYoI,wBAAZ;AACA;;AAEA,wBAAIY,oBAAoB,CAAElC,oBAAF,EAAyBmC,MAAzB,CAAgCb,wBAAhC,CAAxB;;AAEA,2BAAOY,iBAAP;AACH,iBAvKuB;AAwKxB;AAxKwB,iBAyKvBE,MAzKuB,CAyKhB,UAACC,WAAD,EAAcC,YAAd;AAAA,2BAA+BD,YAAYF,MAAZ,CAAmBG,YAAnB,CAA/B;AAAA,iBAzKgB,CAAxB;;AA2KA;AACA;AACA,oBAAIC,iBAAiB,CAArB;AACA,oBAAIC,eAAe,kBAAnB;AACAnD,kCAAkBnC,OAAlB,CAA0B,UAAC1G,CAAD,EAAO;AAC7B,wBAAIgM,gBAAgBhM,EAAEyJ,WAAtB,EACA;AACIuC,uCAAehM,EAAEyJ,WAAjB;AACAsC;AACH;AACD/L,sBAAEyJ,WAAF,GAAgBsC,cAAhB;AACH,iBAPD;;AASA,uBAAOlD,iBAAP;AACH;AAGJ;;;;+CAEkBoD,W,EAAa;AAC5B,qBAAK7J,cAAL,CAAoB6J,WAApB;AACH;;;;;;AA2BLC,WAAOC,OAAP,GAAiB9N,qBAAjB","file":"case-timer-event-browser.js","sourcesContent":["class CaseTimerEventBrowser {\r\n    constructor(element, caseData, opts) {\r\n        let self = this;\r\n\r\n        // extend the selection prototype to include an appendHTML function\r\n        if (!d3.selection.prototype.appendHTML) {\r\n            d3.selection.prototype.appendHTML =\r\n            d3.selection.enter.prototype.appendHTML = function(HTMLString) {\r\n                return this.select(function() {\r\n                    return this.appendChild(document.importNode(new DOMParser().parseFromString(HTMLString, 'text/html').body.childNodes[0], true));\r\n                });\r\n            };\r\n        }\r\n\r\n        d3.select(element).appendHTML(`\r\n            <div class=\"container-fluid\">\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        <div class=\"heading\">Case Timer Status!!!</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        <div id=\"chart2\" class=\"chart-container\" style=\"height: 600px;\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        <div id=\"case-timer-details\" class=\"box details-container responsive-table-1500\" style=\"min-height: 300px;\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br>\r\n                \r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\" >\r\n                        <div id=\"event-details\" class=\"box details-container responsive-table-1100\" style=\"min-height: 300px;\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-xs-12\">\r\n                        <div id=\"snapshot-details\" class=\"box details-container responsive-table\" style=\"min-height: 300px;\"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <br>\r\n\r\n            </div>`);\r\n\r\n\r\n        const chartContainer = document.getElementById('chart2');\r\n        const caseTimerDetailsContainer = document.getElementById('case-timer-details');\r\n        const eventDetailsContainer = document.getElementById('event-details');\r\n        const selectedSnapshotContainer = document.getElementById('snapshot-details');\r\n\r\n        const caseTimerPropertyConfigs = [\r\n            { propertyLabel: \"Type\", propertyValueSelector: x => x.CaseTimerType, onClick: null },\r\n            { propertyLabel: \"Name\", propertyValueSelector: x => x.Name, onClick: null },\r\n            { propertyLabel: \"Current Effective Clock State\", propertyValueSelector: x => separateWordsInCamelCaseStringWithSpaces(x.CurrentEffectiveClockState), onClick: null },\r\n            { propertyLabel: \"Current NonWorking Time Period Types\", propertyValueSelector: x => x.CurrentNonWorkingTimePeriodTypes, onClick: null },\r\n            { propertyLabel: \"Show On Case\", propertyValueSelector: x => x.DisplayOnCase, onClick: null },\r\n            { propertyLabel: \"NonWorking Event Source\", propertyValueSelector: x => x.NonWorkingEventSource, onClick: null },\r\n            { propertyLabel: \"Respects\", propertyValueSelector: x => \r\n                [x.RespectNonWorkingSchedule ? \"<nobr>Non-Working Schedule</nobr>\" : null, \r\n                 x.RespectSlaClock ? \"<nobr>SLA Clock</nobr>\" : null, \r\n                 x.RespectWorkCalendar ? \"<nobr>Work Calendar</nobr>\" : null].filter(r => !!r).join(', '), onClick: null },\r\n\r\n            { propertyLabel: \"Offset + Run Time = Elapsed Time\", propertyValueSelector: x => `${x.Offset} + ${x.RunTime} = ${x.ElapsedTime}`, onClick: null },\r\n                // { propertyLabel: \"Offset\", propertyValueSelector: x => x.Offset, onClick: null },\r\n                // { propertyLabel: \"Run Time\", propertyValueSelector: x => x.RunTime, onClick: null },\r\n                // { propertyLabel: \"Elapsed Time\", propertyValueSelector: x => x.ElapsedTime, onClick: null },\r\n\r\n            { propertyLabel: \"Last Calculated\", propertyValueSelector: x => x.LastCalculated, onClick: null },\r\n            //{ propertyLabel: \"Last Modified\", propertyValueSelector: x => x.LastModified, onClick: null },\r\n            // { propertyLabel: \"Respect NonWorking Schedule\", propertyValueSelector: x => x.RespectNonWorkingSchedule, onClick: null },\r\n            // { propertyLabel: \"Respect Sla Clock\", propertyValueSelector: x => x.RespectSlaClock, onClick: null },\r\n            // { propertyLabel: \"Respect Work Calendar\", propertyValueSelector: x => x.RespectWorkCalendar, onClick: null },\r\n            //{ propertyLabel: \"Is Active\", propertyValueSelector: x => x.IsActive, onClick: null },\r\n            { propertyLabel: \"Started\", propertyValueSelector: x => x.Started, onClick: null },\r\n            { propertyLabel: \"Stopped\", propertyValueSelector: x => x.Stopped, onClick: null },\r\n            { propertyLabel: \"Id\", propertyValueSelector: x => x.Id, onClick: null },\r\n            { propertyLabel: \"Events\", propertyValueSelector: x => x.Events, onClick: d => renderEventDetailsTable(d.Events, []) },\r\n        ];\r\n\r\n        const caseTimerEventPropertyConfigs = [\r\n            { propertyLabel: \"Event Time\", propertyValueSelector: d => d.EventTime, onClick: null },\r\n            { propertyLabel: \"Event Identifier\", propertyValueSelector: d => d.EventIdentifierString, onClick: null },\r\n            { propertyLabel: \"Is Derived\", propertyValueSelector: d => d.IsDerived, onClick: null },\r\n            { propertyLabel: \"Is Inherited\", propertyValueSelector: d => d.IsInherited, onClick: null },\r\n            { propertyLabel: \"Is Creation\", propertyValueSelector: d => d.IsCaseTimerCreationEvent, onClick: null },\r\n            { propertyLabel: \"App Id\", propertyValueSelector: d => d.AppIdentifier, onClick: null },\r\n            { propertyLabel: \"Id\", propertyValueSelector: d => d.Id, onClick: null },\r\n            { propertyLabel: \"Snapshot\", propertyValueSelector: d => d.CaseTimerSnapshot, onClick: d => displaySnapshotDetails(d.CaseTimerSnapshot) }\r\n        ];\r\n\r\n        const caseTimerSnapshotPropertyConfigs = [\r\n            { propertyLabel: \"Id\", propertyValueSelector: d => d.Id, onClick: null },\r\n            { propertyLabel: \"Is Derived\", propertyValueSelector: d => d.IsDerived, onClick: null },\r\n            { propertyLabel: \"Snapshot Time\", propertyValueSelector: d => d.SnapshotTime, onClick: null },\r\n        ];\r\n\r\n        function renderCaseData(caseDataToRender) {\r\n            if (!caseDataToRender) { alert('case data was not provided.'); return; }\r\n            if ((caseDataToRender.Timers || []).length == 0) { alert('case data contains no timers'); return; }\r\n    \r\n            console.log(\"input caseData:\", caseDataToRender);\r\n    \r\n            //normalizeProperties(caseTimerDataArray);\r\n    \r\n            let caseTimerTimelineData = transformCaseTimerDataToTimelineData(caseDataToRender.Timers);\r\n            console.log(\"caseTimerTimelineData:\", caseTimerTimelineData);\r\n    \r\n            renderCaseTimersTable(caseDataToRender.Timers);\r\n    \r\n            renderTimeline(chartContainer, caseTimerTimelineData);\r\n        }\r\n\r\n        self.renderCaseData = renderCaseData;\r\n\r\n        self.renderCaseData(caseData);\r\n\r\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n        function renderTimeline(container, timelineData) {\r\n            removeAllChildNodesOfElement(container);\r\n\r\n            const timeline = new TimelineChart(container, timelineData, {\r\n                //enableLiveTimer: true, \r\n                tip: formatTipText,\r\n                groupHeight: 40\r\n            }); //.onVizChange(e => console.log(e));\r\n\r\n            // Resize container vertically to fit timeline\r\n            var svgHeight = d3.select(container).select(\"svg\").attr(\"height\")*1;\r\n            d3.select(container).style(\"height\", (svgHeight+10)+\"px\");\r\n        }\r\n\r\n\r\n        function separateWordsInCamelCaseStringWithSpaces(str) {\r\n            return (str || '').replace(/([A-Z])/g, \" $1\").trim();\r\n        }\r\n\r\n        function formatDate(date) {\r\n            // We will only display fractional seconds to ms precision, because JS's date doesn't support any greater precision than that.\r\n            //return moment(date).format('MMMM Do YYYY, h:mm:ss.SSS a');\r\n            return moment(date).format('YYYY-MM-DD hh:mm:ss.SSS a');\r\n        }\r\n\r\n        var createLabelFromIntervalDuration = function(d){\r\n            return formatDuration(d.to, d.from);\r\n        };\r\n\r\n        function formatLabelForTipHtml(label) {\r\n            return (label || '').replace(/ /g, '&nbsp;').replace(/\\\\n/g, '<br>');\r\n        };\r\n\r\n        function formatDuration(later, earlier) {\r\n            var msDiff = moment(later).diff(moment(earlier));\r\n            var duration = moment.duration(msDiff);\r\n            var parts = [\r\n                duration._data.years ? duration._data.years+' year(s)' : null,\r\n                duration._data.months ? duration._data.months+' month(s)' : null,\r\n                duration._data.days ? duration._data.days+' day(s)' : null,\r\n                duration._data.hours ? duration._data.hours+' hour(s)' : null,\r\n                duration._data.minutes ? duration._data.minutes+' minute(s)' : null,\r\n                duration._data.seconds ? duration._data.seconds+' second(s)' : null\r\n            ].filter(function(x){return x!=null;});\r\n            return parts.join(' ');\r\n        };\r\n\r\n        function formatTipText(d) {\r\n            // if d.label is a fn, call it now.\r\n            var lbl = typeof(d.label) == 'function' ? formatLabelForTipHtml(d.label(d)+'') : typeof(d.label)=='string' ? formatLabelForTipHtml(d.label) : '(no label)';\r\n            // include \"at\" time for points or from/to time range for intervals with label\r\n            var result = !!d.at ? \r\n                lbl+'<br><br>Time: '+formatDate(d.at) : \r\n                lbl+'<br><br>From: '+formatDate(d.from)+'<br>To: '+formatDate(d.to)+'<br>Duration: '+formatDuration(d.to, d.from);\r\n            return result;\r\n        };\r\n\r\n\r\n        function isUUID(value) {\r\n            var result = value.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i);\r\n            return !!result && result.index === 0;\r\n        }\r\n\r\n        function removeAllChildNodesOfElement(container) {\r\n            // remove all elements of the container\r\n            while (container.firstChild) {\r\n                container.removeChild(container.firstChild);\r\n            }\r\n        }\r\n\r\n        function renderEventDetailsTable(allEvents, selectedEvents)\r\n        {\r\n            removeAllChildNodesOfElement(eventDetailsContainer);\r\n            //renderEventList(allEvents, selectedEvents);\r\n            renderTableOfObjects(eventDetailsContainer, caseTimerEventPropertyConfigs, allEvents, selectedEvents);\r\n        }\r\n\r\n        function renderCaseTimersTable(allCaseTimers, selectedTimers)\r\n        {\r\n            removeAllChildNodesOfElement(caseTimerDetailsContainer);\r\n            renderTableOfObjects(caseTimerDetailsContainer, caseTimerPropertyConfigs, allCaseTimers, selectedTimers);\r\n        }\r\n\r\n\r\n        function renderTableOfObjects(tableContainer, propertyConfigs, itemsToRender, itemsToHighlight)\r\n        {\r\n            // itemsToRender is required and must contain data\r\n            if (!itemsToRender)\r\n            {\r\n                alert('renderTableOfObjects called with no data');\r\n                return;\r\n            }\r\n\r\n            itemsToHighlight = itemsToHighlight || [];\r\n\r\n            var table = d3.select(tableContainer).append('table').classed('table', true);\r\n            var headerRow = table.append('thead').append('tr');\r\n            // render table header\r\n            propertyConfigs.forEach(pc => headerRow.append('th').text(pc.propertyLabel));\r\n\r\n            var tbody = table.append('tbody');\r\n\r\n            itemsToRender.forEach(cte => {\r\n                var tr = tbody.append('tr')\r\n                    .classed('highlighted', itemsToHighlight.findIndex(o => o == cte) != -1)\r\n                    .selectAll('td').data(propertyConfigs);\r\n                tr.enter().append('td')\r\n                    .attr('data-title', d => d.propertyLabel)\r\n                    .html(d => getHtmlContentForPropertyValue(d, cte))\r\n                    .on('click', d => { \r\n                        if (!!d.onClick) d.onClick(cte); \r\n                    });\r\n            });\r\n\r\n            function getHtmlContentForPropertyValue(propertyConfig, obj)\r\n            {\r\n                var propertyValue = propertyConfig.propertyValueSelector(obj);\r\n\r\n                if (propertyValue === undefined)\r\n                {\r\n                    return \"\";\r\n                }\r\n                else if (propertyValue === null)\r\n                {\r\n                    return \"(null)\";\r\n                }\r\n                else if (typeof propertyValue == 'string')\r\n                {\r\n                    //if (isUUID(propertyValue))\r\n                    //    return \"<span title='\"+propertyValue+\"'>\"+propertyValue.substring(0, 7)+\"...</span>\";\r\n                    return propertyValue;\r\n                }\r\n                else if (typeof propertyValue == 'boolean')\r\n                {\r\n                    //return propertyValue;\r\n                    return \"<input type='checkbox' \"+(!!propertyValue ? \"checked\" : \"\")+\" onclick='return false;' />\";\r\n                }\r\n                else if (propertyValue.constructor == (new Date()).constructor)\r\n                {\r\n                    return formatDate(propertyValue);\r\n                }\r\n                else if(!!propertyConfig.onClick)\r\n                {\r\n                    return \"<button class='btn btn-xs'>View</button>\";\r\n                }\r\n                return '<em>(no value resolver defined)</em>'\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // function renderEventList(events)\r\n        // {\r\n        //     // case timer event container\r\n        //     let selection = d3.select(eventDetailsContainer).append('div')\r\n        //         .selectAll('.case-timer-event')\r\n        //         .data(events);\r\n\r\n        //     //caseTimerEventSelection.exit().remove();\r\n\r\n        //     let caseTimerEventSelection = selection.enter()\r\n        //         .call(renderEventListItem);\r\n\r\n        //     function renderEventListItem()\r\n        //     {\r\n        //         var caseTimerEventContainer = this.append('div').attr('class', 'case-timer-event');\r\n        //         // Render the event properties\r\n        //         caseTimerEventPropertyConfigs.forEach(pc => caseTimerEventContainer.call(d => renderProperty.bind(d)(pc)));\r\n        //     }\r\n        // }\r\n\r\n        // function renderProperty(caseTimerEventPropertyConfig)\r\n        // {\r\n        //     var {propertyLabel, propertyValueSelector, onClick} = caseTimerEventPropertyConfig;\r\n\r\n        //     let caseTimerProperty = this\r\n        //         .append('div')\r\n        //         .attr('class', 'case-timer-event-property');\r\n        //     let label = caseTimerProperty\r\n        //         .append('div')\r\n        //         .attr('class', 'case-timer-event-property-label')\r\n        //         .text(propertyLabel)\r\n        //     let caseTimerPropertyValue = caseTimerProperty\r\n        //         .append('div')\r\n        //         .attr('class', 'case-timer-event-property-value')\r\n        //         .html(d => {\r\n        //             var propertyValue = propertyValueSelector(d);\r\n\r\n        //             if (propertyValue === undefined)\r\n        //             {\r\n        //                 return \"\";\r\n        //             }\r\n        //             else if (propertyValue === null)\r\n        //             {\r\n        //                 return \"(null)\";\r\n        //             }\r\n        //             else if (typeof propertyValue == 'string')\r\n        //             {\r\n        //                 return propertyValue;\r\n        //             }\r\n        //             else if (typeof propertyValue == 'boolean')\r\n        //             {\r\n        //                 return propertyValue;\r\n        //             }\r\n        //             else if (propertyValue.constructor == (new Date()).constructor)\r\n        //             {\r\n        //                 return formatDate(propertyValue);\r\n        //             }\r\n        //             else if(!!onClick)\r\n        //             {\r\n        //                 return \"<span class='link'>(click here to view)</span>\";\r\n        //             }\r\n        //             return '<em>(no value resolver defined)</em>'\r\n        //         })\r\n        //         .on(\"click\", (d) => { \r\n        //             if (!!onClick)\r\n        //             {\r\n        //                 onClick(d); \r\n        //             }\r\n        //         });\r\n        // }\r\n\r\n\r\n        function displaySnapshotDetails(caseTimerSnapshot)\r\n        {\r\n            console.log(caseTimerSnapshot);\r\n            \r\n            // remove all elements of the container\r\n            while (selectedSnapshotContainer.firstChild) {\r\n                selectedSnapshotContainer.removeChild(selectedSnapshotContainer.firstChild);\r\n            }\r\n\r\n            renderTableOfObjects(selectedSnapshotContainer, caseTimerSnapshotPropertyConfigs, [caseTimerSnapshot], [caseTimerSnapshot]);\r\n        }\r\n\r\n\r\n        function normalizeProperties(caseTimerArray)\r\n        {\r\n            var convertDateProperties = function(obj, propertyNamesArray)\r\n            {\r\n                if (!obj) return;\r\n                propertyNamesArray.forEach(pn => {\r\n                    var value = obj[pn];\r\n                    if (value !== null && typeof value === 'string')\r\n                        obj[pn] = new Date(value);\r\n                });\r\n            };\r\n\r\n            caseTimerArray.forEach(ct => {\r\n                ct.Events.forEach(e => {\r\n                    convertDateProperties(e, [ \"EventTime\", \"LastModified\" ]);\r\n                    convertDateProperties(e.CaseTimerSnapshot, [ \"SnapshotTime\", \"LastModified\" ]);\r\n                    var ssd = e.CaseTimerSnapshot.SnapshotData;\r\n                    convertDateProperties(ssd, [ \"SnapshotTime\", \"LastModified\" ]);\r\n                    convertDateProperties(ssd.CaseTimer, [ \"LastCalculated\", \"LastModified\", \"Started\", \"Stopped\" ]);\r\n                    convertDateProperties(ssd.Sla, [ \"EstimatedNextControlPointDate\", \"EstimatedTargetResolutionDate\", \"LastModified\" ]);\r\n                });\r\n                convertDateProperties(ct, [ \"LastCalculated\", \"LastModified\", \"Started\", \"Stopped\" ]);\r\n            });\r\n        }\r\n\r\n        function restoreReferencesInCaseTimerObjectGraph(caseTimerArray)\r\n        {\r\n            // normalize data\r\n            caseTimerArray.forEach(ct => \r\n            {\r\n                ct.Events.forEach(e => \r\n                {\r\n                    // link the case timer events to the case timer that it belongs to\r\n                    e.CaseTimer = ct;\r\n\r\n\r\n                    // Share Case/CaseTimer data, depending upon whether an SLA is present.\r\n                    //  - If CaseTimer is for an SLA, then share the CaseTimer data with the SLA.\r\n                    //  - If CaseTimer is not for an SLA but if there is an SLA on the case, then share the Case data with the Sla's CaseTimer.\r\n                    var ssd = e.CaseTimerSnapshot.SnapshotData;\r\n                    if (ssd.CaseTimer.CaseTimerType === 'Sla')\r\n                    {\r\n                        // If SLA hasn't already been removed \r\n                        if (ssd.Sla != null)\r\n                        {\r\n                            ssd.Sla.CaseTimer = ssd.CaseTimer;\r\n                        }\r\n                    }\r\n                    else if (ssd.Sla != null)\r\n                    {\r\n                        ssd.Sla.CaseTimer.Case = ssd.CaseTimer.Case;\r\n                    }\r\n                    // If an SLA is present, then share its data with the Case.\r\n                    if (ssd.Sla != null && ssd.Sla.CaseTimer.Case.Sla != ssd.Sla)\r\n                    {\r\n                        ssd.Sla.CaseTimer.Case.Sla = ssd.Sla;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n\r\n        function transformCaseTimerDataToTimelineData(originalCaseTimerArray)\r\n        {\r\n            // create a copy of the data\r\n            //let copyOfCaseTimerArray = JSON.parse(JSON.stringify(originalCaseTimerArray));\r\n            let copyOfCaseTimerArray = originalCaseTimerArray;\r\n\r\n            restoreReferencesInCaseTimerObjectGraph(copyOfCaseTimerArray);\r\n\r\n            normalizeProperties(copyOfCaseTimerArray);\r\n\r\n            var allTimelineSeries = copyOfCaseTimerArray.map(ct => \r\n            {\r\n                // for each case timer, this returns an array of data series, each of which can be plotted on the timeline\r\n\r\n                // As we group these events into points, we have to treat the EventTime as an integral number of milliseconds.\r\n                // Otherwise, the milliseconds will be lost if we just use the EventTime (Date), because the d3.nest.key resolver will convert the returned object into a string.\r\n                var points = (d3.nest().key(d => d.EventTime*1).entries(ct.Events))\r\n                    .map(d => {\r\n                        // Create point data structure\r\n                        return {\r\n                            type: TimelineChart.TYPE.POINT,\r\n                            customClass: 'point-white',\r\n                            label: function(){ \r\n                                return d.values.length+' Event'+(d.values.length == 1 ? '' : 's')+':<br>' + \r\n                                    d.values.map(e => ` - ${e.EventIdentifierString}<br>`).join('');\r\n                            },\r\n                            at: new Date(d.key*1),\r\n                            data: d.values,\r\n                            onClick: function(){ \r\n                                renderCaseTimersTable(copyOfCaseTimerArray, [ ct ]);\r\n                                renderEventDetailsTable(ct.Events, d.values); \r\n                            }\r\n                        };\r\n                    });\r\n\r\n                var eventsForTimerSeries = {\r\n                    label: \"All Events for timer [\"+ct.Name+\"]\",\r\n                    groupingKey: ct.Id,  // The case timer Id is a suitable grouping key\r\n                    data: points\r\n                };\r\n\r\n                var now = new Date();\r\n                var intervalConfigs = [\r\n                    {\r\n                        key: \"TimeAccrualIntervalKey\",\r\n                        intervalSeriesEventGroupingKeyFn: evt => \"TimeAccrualInterval\",\r\n                        groupLabelFn: evt => \"Time Accrued\",\r\n                        intervalLabelFn: evt => \"Clock Running\",\r\n                        startEventId: \"TimerStartedAccruingTime\",\r\n                        endEventId: \"TimerStoppedAccruingTime\",\r\n                        intervalType: \"TimeAccrualInterval\",\r\n                        customClass: 'interval-white',\r\n                    },\r\n                    {\r\n                        key: \"FollowingSlaIntervalKey\",\r\n                        intervalSeriesEventGroupingKeyFn: evt => \"FollowingSlaInterval\",\r\n                        groupLabelFn: evt => \"Following SLA\",\r\n                        intervalLabelFn: evt => \"Following SLA\",\r\n                        startEventId: \"CaseTimerStartedFollowingSla\",\r\n                        endEventId: \"CaseTimerStoppedFollowingSla\",\r\n                        intervalType: \"FollowingSlaInterval\",\r\n                        customClass: 'interval-white',\r\n                    },\r\n                    {\r\n                        key: \"NonworkingScheduledTimePeriodIntervalKey\",\r\n                        intervalSeriesEventGroupingKeyFn: evt => \"NonworkingScheduledTimePeriodInterval-\"+evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceId,\r\n                        groupLabelFn: evt => \"Non-working Scheduled Time Period: \"+evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceName,\r\n                        intervalLabelFn: evt => \"Non-working Scheduled Time Period: \" + evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceName,\r\n                        startEventId: \"Temporal:NonworkingScheduledTimePeriodBegan\",\r\n                        endEventId: \"Temporal:NonworkingScheduledTimePeriodEnded\",\r\n                        intervalType: \"NonworkingScheduledTimePeriodInterval\",\r\n                        customClass: 'interval-white',\r\n                    },\r\n                    {\r\n                        key: \"SlaPauseIntervalKey\",\r\n                        intervalSeriesEventGroupingKeyFn: evt => \"SlaPauseInterval-\"+evt.EventData.TemporalEventArgs.SourceId,\r\n                        groupLabelFn: evt => \"SLA Pause for \" + evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceName,\r\n                        intervalLabelFn: evt => \"SLA Pause for \" + evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceName,\r\n                        startEventId: \"Temporal:SlaPauseBegan\",\r\n                        endEventId: \"Temporal:SlaPauseEnded\",\r\n                        intervalType: \"SlaPauseInterval\",\r\n                        customClass: 'interval-white',\r\n                    },\r\n                    {\r\n                        key: \"OffWorkTimePeriodIntervalKey\",\r\n                        intervalSeriesEventGroupingKeyFn: evt => \"OffWorkTimePeriodInterval-\"+evt.EventData.TemporalEventArgs.SourceId,\r\n                        groupLabelFn: evt => \"Off-work time period for \"+evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceNameName,\r\n                        intervalLabelFn: evt => \"Off-work time period for \" + evt.EventData.TemporalEventArgs.NonWorkingPeriod.SourceName,\r\n                        startEventId: \"Temporal:WorkPeriodEnded\",\r\n                        endEventId: \"Temporal:WorkPeriodBegan\",\r\n                        intervalType: \"OffWorkTimePeriodInterval\",\r\n                        customClass: 'interval-white',\r\n                    },\r\n                ];\r\n                //var intervalStartEventIds = intervalConfigs.map(ic => ic.startEventId);\r\n                //var intervalEndEventIds = intervalConfigs.map(ic => ic.endEventId);\r\n\r\n                // This fn creates a key from an event that will be used to group the event.  Each event will end up in at most 1 group.\r\n                let eventIntervalGroupingKeyFn = evt => {\r\n                    // find the first interval config that matches, cand call it's fn to generate the grouping key.\r\n                    var matchingIntervalConfig = intervalConfigs.find(ic => evt.EventIdentifierString.includes(ic.startEventId) || evt.EventIdentifierString.includes(ic.endEventId));\r\n                    if (!matchingIntervalConfig)\r\n                        return \"REMOVE\";\r\n                    //evt.intervalConfig = matchingIntervalConfig;  // attach this to the event here, so we don't have to resolve it again later\r\n                    return matchingIntervalConfig.key+\"::\"+matchingIntervalConfig.intervalSeriesEventGroupingKeyFn(evt);\r\n                };\r\n\r\n                // Create an array of interval groups\r\n                // Using D3.nest and the event interval grouping fn, create a series of time intervals for each distinct group of data for this timer\r\n                let timerIntervalSeriesArray = d3.nest()\r\n                    .key(eventIntervalGroupingKeyFn).entries(ct.Events)\r\n                    .filter(o => o.key != \"REMOVE\") // exclude all interval groups that yield a key of \"REMOVE\"\r\n                    .map(intervalGroup => {\r\n\r\n                        // extract the interval config key from the first part of the key\r\n                        var intervalConfigKey = intervalGroup.key.split('::')[0];\r\n                        // resolve the associated interval config using its key\r\n                        var intervalConfig = intervalConfigs.find(ic => ic.key == intervalConfigKey);\r\n\r\n                        var eventsOfInterest = intervalGroup.values;\r\n                        // Create intervals for this group from the events\r\n                        let intervals = [];\r\n                        for(var i = 0; i < eventsOfInterest.length; i += 2)\r\n                        {\r\n                            let curEvt = eventsOfInterest[i];\r\n                            let nextEvt = eventsOfInterest.length > i + 1 ? eventsOfInterest[i + 1] : null;\r\n                            let ic = intervalConfig;\r\n\r\n                            // If following item exist in array, create an interval with this one and that one\r\n                            if (nextEvt != null)\r\n                            {\r\n                                intervals.push({\r\n                                    type: TimelineChart.TYPE.INTERVAL,\r\n                                    intervalType: ic.intervalType,\r\n                                    customClass: ic.customClass,\r\n                                    label: ic.intervalLabelFn(curEvt),\r\n                                    from: new Date(curEvt.EventTime),\r\n                                    to: new Date(nextEvt.EventTime),\r\n                                    data: [curEvt, nextEvt],\r\n                                    onClick: function(){ \r\n                                        renderCaseTimersTable(copyOfCaseTimerArray, [ ct ]);\r\n                                        renderEventDetailsTable(ct.Events, [curEvt, nextEvt]);\r\n                                    } \r\n                                });\r\n                            }\r\n                            // ...otherwise, create the final interval with this one and the current time as a tentative stop time\r\n                            else\r\n                            {\r\n                                intervals.push({\r\n                                    type: TimelineChart.TYPE.INTERVAL,\r\n                                    intervalType: ic.intervalType,\r\n                                    customClass: ic.customClass,\r\n                                    label: ic.intervalLabelFn(curEvt),\r\n                                    from: new Date(curEvt.EventTime),\r\n                                    to: now,\r\n                                    data: [curEvt],\r\n                                    onClick: function(){ \r\n                                        renderCaseTimersTable(copyOfCaseTimerArray, [ ct ]);\r\n                                        renderEventDetailsTable(ct.Events, [curEvt]);\r\n                                    } \r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        // new series\r\n                        return {\r\n                            label: intervalConfig.groupLabelFn(intervalGroup.values[0]),\r\n                            groupingKey: ct.Id,  // The case timer Id is a suitable grouping key\r\n                            data: intervals\r\n                        };\r\n                    });\r\n                console.log(timerIntervalSeriesArray);\r\n                // end grouping of intervals\r\n\r\n                var allSeriesForTimer = [ eventsForTimerSeries ].concat(timerIntervalSeriesArray);\r\n\r\n                return allSeriesForTimer;\r\n            })\r\n            // flatten the array of timeline data series arrays into a single array of TDS.\r\n            .reduce((accumulator, currentValue) => accumulator.concat(currentValue));\r\n\r\n            // We want to provide some sort of visual grouping mechanism so that all series associated with the same case timer can be visually grouped.\r\n            // Transform the group key to a 0-based index.\r\n            var newGroupingKey = 0;\r\n            var lastGroupKey = \"----------------\";\r\n            allTimelineSeries.forEach((x) => {\r\n                if (lastGroupKey != x.groupingKey)\r\n                {\r\n                    lastGroupKey = x.groupingKey;\r\n                    newGroupingKey++;\r\n                }\r\n                x.groupingKey = newGroupingKey;\r\n            });\r\n\r\n            return allTimelineSeries;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    updateTimelineData(newCaseData) {\r\n        this.renderCaseData(newCaseData);\r\n    }\r\n    // extendOptions(ext = {}) {\r\n    //     let defaultOptions = {\r\n    //         intervalMinWidth: 8, // px\r\n    //         tip: undefined,\r\n    //         textTruncateThreshold: 30,\r\n    //         enableLiveTimer: false,\r\n    //         timerTickInterval: 1000,\r\n    //         hideGroupLabels: false\r\n    //     };\r\n    //     Object.keys(ext).map(k => defaultOptions[k] = ext[k]);\r\n    //     return defaultOptions;\r\n    // }\r\n    // getPointMinDt(p) {\r\n    //     return p.type === TimelineChart.TYPE.POINT ? p.at : p.from;\r\n    // }\r\n    // getPointMaxDt(p) {\r\n    //     return p.type === TimelineChart.TYPE.POINT ? p.at : p.to;\r\n    // }\r\n    // onVizChange(fn) {\r\n    //     this.onVizChangeFn = fn;\r\n    //     return this;\r\n    // }\r\n\r\n}\r\n\r\n\r\nmodule.exports = CaseTimerEventBrowser;\r\n\r\n"]}